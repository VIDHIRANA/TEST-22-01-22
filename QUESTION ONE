/* You are given an array of integers nums, there is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position.

Return the max sliding window.*/

#include <iostream>
#include <bits/stdc++.h>
using namespace std;

// function to check the  maximum no of elements visible in window of K
int checkMaxK(int arr[], int K, int num){
  // maxCount is used to hold the value of max elementsvisible 
  int i, j, maxCount;

  for (i = 0; i < num- K; i ++)
  {
    maxCount= arr[i];
    for (j = 1; j < K; j++)
    { // condition to check if the existing value is greater than the maxCount stored previously If yes then assigning its value to the maxcount 
      if (arr[i +j]> maxCount)
      {
        maxCount= arr[i+j];
      }
    }
    return maxCount; 
  }
  return maxCount;
}

int main() {
  int arr[] = {4,5,6,8,4,2,3,5,6,7,4,7,5,9,4,5,3};
  int num = sizeof(arr) / sizeof(arr[0]);
  int K = 4;
  
  cout <<" the max value of sliding window is "<<checkMaxK(arr, K, num) ;
  return 0;
} 
