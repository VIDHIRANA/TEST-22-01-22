/*Find all interleavings of given strings that can be formed from all the characters of the first and second string where the order of characters is preserved.*/
#include <iostream>
#include <bits/stdc++.h>
using namespace std;


//function to store the interleaving 
int interleavedValues(char *first, char *second, char *value, int index,int len1, int len2){
   
   //condition to check the inclusion of elements 
    if (len1== 0 && len2 == 0)
    {
      cout<< value<<"\n";
    }
    if(len1 !=0)
    {
      value[index] = first[0];
      interleavedValues(first+1, second, value, index+1, len1-1, len2);
    }
    if(len2 !=0)
    {
      value[index] = second[0];
      interleavedValues(first, second+1, value, index+1, len1, len2-1);
    }
  return 0;
}
//funtion to display the interleaved strings
int displayInterleaved(char *first, char *second, int len1, int len2){
char *value;
// assigning position in memory for the element 
value = new char [((len1 + len2 + 1) * sizeof(char) )];

// terminating it post use
value [len1 + len2] = '\0' ;

//calling the fucntion to access the stored value 
 interleavedValues(first, second, value, 0, len1, len2 );

 return 0;
}


int main() {
 int len1, len2;
 char first[]= "ABCF";
 char second[]= "GHFV";
 len1 = strlen(first);
 len2 = strlen(second);

 // calling function to interleave and display strings
 displayInterleaved( first, second, len1, len2) ;
  return 0;
} 
